generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  Role Role[]
}

model Employee {
  id                Int                 @id @default(autoincrement())
  firstName         String              @db.VarChar(255)
  middleName        String?             @db.VarChar(255)
  lastName          String              @db.VarChar(255)
  email             String              @db.VarChar(255)
  addressLine       String              @db.VarChar(255)
  city              String              @db.VarChar(255)
  province          String              @db.VarChar(255)
  country           String              @db.VarChar(255)
  roleId            Int
  employeeTypeId    Int
  basePay           Float
  Bonus             Bonus[]
  EmployeeType      EmployeeType        @relation(fields: [employeeTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Role              Role                @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  EmployeeDeduction EmployeeDeduction[]
  Leave             Leave[]
  Payroll           Payroll[]
  Signatory         Signatory[]
}

model EmployeeType {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(255)
  Employee Employee[]
}

model Leave {
  id            Int         @id @default(autoincrement())
  employeeId    Int
  leaveTypeId   Int
  start_date    DateTime    @db.Date
  end_date      DateTime    @db.Date
  leaveStatusId Int
  Employee      Employee    @relation(fields: [employeeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  LeaveStatus   LeaveStatus @relation(fields: [leaveStatusId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  LeaveType     LeaveType   @relation(fields: [leaveTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Signatory     Signatory[]
}

model LeaveStatus {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(255)
  Leave Leave[]
}

model LeaveType {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(255)
  Leave Leave[]
}

model Role {
  id           Int        @id @default(autoincrement())
  title        String     @db.VarChar(255)
  departmentId Int
  Employee     Employee[]
  Department   Department @relation(fields: [departmentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Signatory {
  id         Int      @id @default(autoincrement())
  approverId Int
  leaveId    Int
  Employee   Employee @relation(fields: [approverId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Leave      Leave    @relation(fields: [leaveId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Bonus {
  id            Int      @id @default(autoincrement())
  employeeId    Int
  description   String   @db.VarChar(255)
  amount        Float
  effectiveDate DateTime @db.Date
  Employee      Employee @relation(fields: [employeeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Deduction {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  amount            Float
  EmployeeDeduction EmployeeDeduction[]
}

model EmployeeDeduction {
  id                       Int                    @id @default(autoincrement())
  governmentContributionId Int
  employeeId               Int
  deductionId              Int
  effectiveDate            DateTime               @db.Date
  Deduction                Deduction              @relation(fields: [deductionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Employee                 Employee               @relation(fields: [employeeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  GovernmentContribution   GovernmentContribution @relation(fields: [governmentContributionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model GovernmentContribution {
  id                Int                 @id @default(autoincrement())
  payrollId         Int
  sss               Float?
  philHealth        Float?
  pagIbig           Float?
  withholdingTax    Float?
  EmployeeDeduction EmployeeDeduction[]
}

model Payroll {
  id              Int         @id @default(autoincrement())
  employeeeId     Int
  payrollTypeId   Int
  cutoffStartDate DateTime    @db.Date
  cutoffEndDate   DateTime    @db.Date
  dateCreated     DateTime    @db.Date
  netPay          Float
  Employee        Employee    @relation(fields: [employeeeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  PayrollType     PayrollType @relation(fields: [payrollTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model PayrollType {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar(255)
  Payroll Payroll[]
}
